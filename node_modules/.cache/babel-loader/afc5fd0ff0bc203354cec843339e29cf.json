{"ast":null,"code":"// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { LOGIN_EMAIL } from '../actions';\nconst INITIAL_STATE = {\n  email: ''\n};\n\nconst user = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_EMAIL:\n      {\n        return { ...state,\n          email: action.email\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default user;","map":{"version":3,"names":["LOGIN_EMAIL","INITIAL_STATE","email","user","state","action","type"],"sources":["/home/marcela/Documentos/projects | github/trybe-projects/17_trybewallet/sd-022-a-project-trybewallet/src/redux/reducers/user.js"],"sourcesContent":["// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { LOGIN_EMAIL } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case LOGIN_EMAIL: {\n    return {\n      ...state,\n      email: action.email,\n    };\n  }\n  default:\n    return state;\n  }\n};\n\nexport default user;\n"],"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,YAA5B;AAEA,MAAMC,aAAa,GAAG;EACpBC,KAAK,EAAE;AADa,CAAtB;;AAIA,MAAMC,IAAI,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BH,aAA0B;EAAA,IAAXI,MAAW;;EAC9C,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKN,WAAL;MAAkB;QAChB,OAAO,EACL,GAAGI,KADE;UAELF,KAAK,EAAEG,MAAM,CAACH;QAFT,CAAP;MAID;;IACD;MACE,OAAOE,KAAP;EARF;AAUD,CAXD;;AAaA,eAAeD,IAAf"},"metadata":{},"sourceType":"module"}