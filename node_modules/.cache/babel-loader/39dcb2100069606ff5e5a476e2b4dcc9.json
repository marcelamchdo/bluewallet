{"ast":null,"code":"var _jsxFileName = \"/home/marcela/Documentos/meus-projetos/trybewallet/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport trybeWallet from './imgs/trybewallet.png';\nimport { logEmail } from '../redux/actions'; // requisito 01: helpers\n// ajuda usada para fazer as funções do onChange: https://stackoverflow.com/questions/53519578/forms-as-functional-components-with-react/64100833#64100833\n\nfunction Login(_ref) {\n  _s();\n\n  let {\n    loginEmail\n  } = _ref;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [button, setButton] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n  const isValidEmail = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const minLength = 6;\n\n  const handleChangeInput = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    setEmail(target.value);\n    setButton(!(isValidEmail.test(target.value) && password.length >= minLength));\n  };\n\n  const handleChangePassword = _ref3 => {\n    let {\n      target\n    } = _ref3;\n    setPassword(target.value);\n    setButton(!(isValidEmail.test(email) && target.value.length >= minLength));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, redirect && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/carteira\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"loginBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"imgWallet\",\n    alt: \"imgWallet\",\n    src: trybeWallet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"data-testid\": \"email-input\",\n    value: email,\n    placeholder: \"Digite seu email\",\n    onChange: handleChangeInput,\n    className: \"inputForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"passoword\",\n    \"data-testid\": \"password-input\",\n    value: password,\n    placeholder: \"Digite sua senha\",\n    onChange: handleChangePassword,\n    className: \"inputForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: button,\n    onClick: () => {\n      loginEmail(email);\n      setRedirect(true);\n    },\n    className: \"buttonForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Entrar\")));\n}\n\n_s(Login, \"oDyUyZBgtaEDjbfQpko/LnOlkok=\");\n\n_c = Login;\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired,\n  loginEmail: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  loginEmail: payload => dispatch(logEmail(payload))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","connect","PropTypes","Redirect","trybeWallet","logEmail","Login","loginEmail","email","setEmail","password","setPassword","button","setButton","redirect","setRedirect","isValidEmail","minLength","handleChangeInput","target","value","test","length","handleChangePassword","propTypes","history","shape","push","func","isRequired","mapDispatchToProps","dispatch","payload"],"sources":["/home/marcela/Documentos/meus-projetos/trybewallet/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport trybeWallet from './imgs/trybewallet.png';\nimport { logEmail } from '../redux/actions';\n\n// requisito 01: helpers\n// ajuda usada para fazer as funções do onChange: https://stackoverflow.com/questions/53519578/forms-as-functional-components-with-react/64100833#64100833\n\nfunction Login({ loginEmail }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [button, setButton] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n\n  const isValidEmail = (/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\n  const minLength = 6;\n\n  const handleChangeInput = ({ target }) => {\n    setEmail(target.value);\n    setButton(!(isValidEmail.test(target.value) && password.length >= minLength));\n  };\n\n  const handleChangePassword = ({ target }) => {\n    setPassword(target.value);\n    setButton(!(isValidEmail.test(email) && target.value.length >= minLength));\n  };\n\n  return (\n    <div className=\"login\">\n      {redirect && <Redirect to=\"/carteira\" />}\n      <form className=\"loginBox\">\n\n        <img className=\"imgWallet\" alt=\"imgWallet\" src={ trybeWallet } />\n\n        <input\n          type=\"email\"\n          id=\"email\"\n          data-testid=\"email-input\"\n          value={ email }\n          placeholder=\"Digite seu email\"\n          onChange={ handleChangeInput }\n          className=\"inputForm\"\n        />\n\n        <br />\n\n        <input\n          type=\"password\"\n          id=\"passoword\"\n          data-testid=\"password-input\"\n          value={ password }\n          placeholder=\"Digite sua senha\"\n          onChange={ handleChangePassword }\n          className=\"inputForm\"\n        />\n\n        <br />\n\n        <button\n          type=\"submit\"\n          disabled={ button }\n          onClick={ () => { loginEmail(email); setRedirect(true); } }\n          className=\"buttonForm\"\n        >\n          Entrar\n        </button>\n      </form>\n    </div>\n  );\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  loginEmail: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  loginEmail: (payload) => dispatch(logEmail(payload)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}